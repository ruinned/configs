#!/bin/sh
#
#  Copyright (c) 2010 Texas Instruments
#
#  Author: Nicolas Dechesne <n-dechesne@ti.com>
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation; either version 2 of the
#  License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
#  USA
#
######################################################################


usage()
{
    echo "usage: $(basename $0) -s <addr> -g <addr> -o <dst>"
cat <<EOF
This script can be used to create a local mirror of an existing 
GIT server that is using gitweb interface, such as http://git.kernel.org.

The script will first fetch the list of all projects on the server,
and then it will update the local mirror:
- adding new created trees
- removing trees that were deleted on the main server
- updating existing trees

Required options:
-s <address> : HTTP address of the GIT server gitweb interace
               E.g: http://git.kernel.org
-g <address> : GIT base address of trees on the GIT server
               E.g: git://git.kernel.org/pub/scm
-o <dst>     : Destination folder where the local trees are stored
               E.g: /var/www/repo

Other options:
-h, --help   : Display this help message
-v           : Verbose mode (set -x)
-n           : Print only

EOF
  exit 0
}

checkparm()
{
    if [ "$(echo $1|grep ^'\-')" ];then
        echo "E: Need an argument"
        usage
    fi
}


ECHO=

# parse commandline options
while [ ! -z "$1" ]; do
  case $1 in
    -h|--help)
      usage
      ;;

    -v)
      set -x
      ;;

    -n)
      ECHO=echo
      ;;

    -o)
      checkparm $2
      BASE="$2"
      ;;

    -s)
      checkparm $2
      SERVERHTTP="$2"
      ;;

    -g)
      checkparm $2
      SERVERGITBASE="$2"
      ;;
     
  esac
  shift
done


# used this to manage the 'print only' version
GIT="$ECHO git"
RM="$ECHO rm"
CD="$ECHO cd"

# temp file to store the server index file
INDEX=`mktemp`

# name of the subdirectory on the mirror
SERVERNAME=`echo $SERVERHTTP | sed 's!http://\(.*\)!\1!'`

if [ ! "${SERVERHTTP}" ] || [ ! "${SERVERGITBASE}" ] || [ ! "${BASE}" ];then
    usage
fi

echo Starting at `date`

# get the project index file
wget -q $SERVERHTTP/?a=project_index -O $INDEX 

mkdir -p $BASE/$SERVERNAME
cd $BASE/$SERVERNAME

# create new trees if needed, update existing trees
for ii in `cat $INDEX | cut -d' ' -f1`
do
    if [ ! -f $ii/HEAD ]; then 
      echo Adding $ii, new tree detected
      $RM -rf $ii
      $GIT clone --mirror $SERVERGITBASE/$ii $ii
    else
      echo Updating $ii
      ($CD $ii && $GIT fetch && $GIT remote prune origin)
    fi
done

# clean up old trees
for ii in `find . -name HEAD | xargs -i dirname {} | cut -c3-`
do
    if ! grep $ii $INDEX > /dev/null ; then
      echo Removing $ii , no longer exist on $SERVERHTTP
      $RM -rf $ii        
    fi
done

echo Completed at `date`
